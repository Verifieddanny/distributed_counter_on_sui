{
  "version": 3,
  "sources": ["../../../src/utils/move-registry.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/** The pattern to find an optionally versioned name */\nconst NAME_PATTERN = /^([a-z0-9]+(?:-[a-z0-9]+)*)@([a-z0-9]+(?:-[a-z0-9]+)*)(?:\\/v(\\d+))?$/;\n\nexport const isValidNamedPackage = (name: string): boolean => {\n\treturn NAME_PATTERN.test(name);\n};\n\n/**\n * Checks if a type contains valid named packages.\n * This DOES NOT check if the type is a valid Move type.\n */\nexport const isValidNamedType = (type: string): boolean => {\n\t// split our type by all possible type delimeters.\n\tconst splitType = type.split(/::|<|>|,/);\n\tfor (const t of splitType) {\n\t\tif (t.includes('@') && !isValidNamedPackage(t)) return false;\n\t}\n\t// TODO: Add `isValidStructTag` check once\n\t// it's generally introduced.\n\treturn true;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,MAAM,eAAe;AAEd,MAAM,sBAAsB,CAAC,SAA0B;AAC7D,SAAO,aAAa,KAAK,IAAI;AAC9B;AAMO,MAAM,mBAAmB,CAAC,SAA0B;AAE1D,QAAM,YAAY,KAAK,MAAM,UAAU;AACvC,aAAW,KAAK,WAAW;AAC1B,QAAI,EAAE,SAAS,GAAG,KAAK,CAAC,oBAAoB,CAAC,EAAG,QAAO;AAAA,EACxD;AAGA,SAAO;AACR;",
  "names": []
}
